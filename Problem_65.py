'''
Задача 65
Приближения e
Квадратный корень из 2 можно записать в виде бесконечной непрерывной дроби.

√2 = 1 +    
1
    2 + 
1
        2 + 
1
            2 + 
1
                2 + ...
Бесконечную непрерывную дробь можно записать, воспользовавшись обозначением √2 = [1;(2)], где (2) указывает на то, что 2 повторяется до бесконечности. Подобным образом, √23 = [4;(1,3,1,8)].

Оказывается, что последовательность частичных значений непрерывных дробей предоставляет наилучшую рациональную аппроксимацию квадратного корня. Рассмотрим приближения √2.

1 + 
1
= 3/2
    
2
 
1 + 
1
= 7/5
    2 + 
1
        
2
 
1 + 
1
= 17/12
    2 + 
1
 
        2 + 
1
 
            
2
 
1 + 
1
= 41/29
    2 + 
1
        2 + 
1
 
            2 + 
1
 
                
2
 
Таким образом, последовательность первых десяти приближений для √2 имеет вид:

1, 3/2, 7/5, 17/12, 41/29, 99/70, 239/169, 577/408, 1393/985, 3363/2378, ...
Самое удивительное, что важная математическая константа
e = [2; 1,2,1, 1,4,1, 1,6,1 , ... , 1,2k,1, ...].

Первые десять членов последовательности приближений для e перечислены ниже:

2, 3, 8/3, 11/4, 19/7, 87/32, 106/39, 193/71, 1264/465, 1457/536, ...
Сумма цифр числителя 10-го приближения равна 1 + 4 + 5 + 7 = 17.

Найдите сумму цифр числителя 100-го приближения непрерывной дроби для e.


'''
from time import time

def main():
    start = time()
    m,n = 1,2
    for i in range(2,101):
        if i%3==0:
            a = 2 * i//3  
        else:
            a=1
        m,n = n,m+a*n
    print(n)
    print(f"{sum(map(int,str(n)))} - суммуa цифр числителя 100-го приближения непрерывной дроби для e")

    print(f"Program running time {round(time() - start, 2)} sec.")

if __name__ == "__main__":
    main()
