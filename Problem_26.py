'''
Задача 26
Обратные циклы
Единичная дробь имеет 1 в числителе. 
Десятичные представления единичных дробей со знаменателями 
от 2 до 10 даны ниже:

1/2	=	0.5
1/3	=	0.(3)
1/4	=	0.25
1/5	=	0.2
1/6	=	0.1(6)
1/7	=	0.(142857)
1/8	=	0.125
1/9	=	0.(1)
1/10	=	0.1

Где 0.1(6) значит 0.166666..., и имеет повторяющуюся последовательность из одной цифры. 
Заметим, что 1/7 имеет повторяющуюся последовательность из 6 цифр.

Найдите значение d < 1000, для которого 1/d в десятичном виде содержит самую 
длинную повторяющуюся последовательность цифр.

'''

def traditional():
    start = 2
    limit = 1000
    max_num = 1
    max_cycle = 1

    for d in range(start, limit+1):
        n = 1
        while n < d:
            x = 10**n - 1
            if x % d == 0:
                break
            n += 1
        if n != d:
            if n > max_cycle:
                max_cycle = n
                max_num = d

    return max_num, max_cycle

print (traditional())

#####################################################
def func():
    for num in range(2,1001):
            i = 1
            i1 = 1

            arr = ''
            while i1 <= num:
                if i//num ==0:
                    i *=10
                    if len(arr)==0:
                        arr += '0,'
                    else:
                        arr += '0'
                else:
                    res = i//num
                    arr += str(res)
                    if i//num == i/num or len(arr)==num:
                        break
                    i = i%num * 10
                if arr[-1] == arr[-2] and arr[-3] == arr[-2]:
                    break 
                i1 +=1
            while arr[-2:] == arr[-4:-2] and arr[-6:-4] == arr[-4:-2]:
                arr = arr[:-2]
            print(num, "The END:",(arr))
            print(len(arr))
        print(1/998)

#256
#'1798561151079136690647482014388489208633093525'

#'17953321364452423698384201077199281867145421903052064631956912028725314183123877917414721723518850987432675044883303411    
