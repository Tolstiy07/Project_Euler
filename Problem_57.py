'''
Задача 57
Приближения квадратного корня
Можно убедиться в том, что квадратный корень из двух можно выразить в виде бесконечно длинной дроби.

√ 2 = 1 + 1/(2 + 1/(2 + 1/(2 + ... ))) = 1.414213...

Приблизив это выражение для первых четырех итераций, получим:

1 + 1/2 = 3/2 = 1.5
1 + 1/(2 + 1/2) = 7/5 = 1.4
1 + 1/(2 + 1/(2 + 1/2)) = 17/12 = 1.41666...
1 + 1/(2 + 1/(2 + 1/(2 + 1/2))) = 41/29 = 1.41379...

Следующие три приближения: 99/70, 239/169 и 577/408, а восьмое приближение, 1393/985, 
является первым случаем, в котором количество цифр в числителе превышает количество цифр в знаменателе.

У скольких дробей длина числителя больше длины знаменателя в первой тысяче приближений выражения?


'''
from time import time

def main():
    start = time()

    chisl = 3
    znam = 2
    result = 0
    for x in range(2,1001):
        chisl +=znam
        c = chisl
        chisl = znam + c
        znam = c
        if len(str(chisl))>len(str(znam)):
            result += 1
    print(f"{result} - дробей длина числителя больше длины знаменателя в первой тысяче приближений выражения")
    
    print(f"Program running time {round(time() - start, 2)} sec.")

if __name__ == "__main__":
    main()
