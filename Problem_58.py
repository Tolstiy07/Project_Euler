'''
Задача 58
Спиральные простые числа
Начиная с 1 и продвигаясь по спирали в направлении против часовой стрелки, получается квадратная 
спираль с длиной стороны 7
65 64 63 62 61 60 59 58 57 
66 37 36 35 34 33 32 31 56
67 38 17 16 15 14 13 30 55
68 39 18  5  4  3 12 29 54
69 40 19  6  1  2 11 28 53
70 41 20  7  8  9 10 27 52
71 42 21 22 23 24 25 26 51
72 43 44 45 46 47 48 49 50
73 74 75 76 77 78 79 80 81
Интересно заметить, что нечетные квадраты лежат на правой нижней полудиагонали. 

Еще интереснее то, что среди 13 чисел, лежащих на обеих диагоналях, 8 являются простыми; 
т.е. отношение составляет 8/13 ≈ 62%.

Если добавить еще один целый слой вокруг изображенной выше спирали, получится квадратная спираль
с длиной стороны 9. Если продолжать данный процесс, какой будет длина стороны квадратной спирали, 
 которой отношение количества простых чисел к количеству всех чисел на обеих диагоналях упадет ниже 10%?


'''
from time import time
from sympy import isprime  # определяет простое число или нет


def main():
    start = time()

    prime = 0
    all_ = 1
    number = 1
    k = 0
    while True:
        k += 2
        for x in range(4):
            number += k
            if isprime(number):
                prime += 1
            all_ += 1
        if (prime / all_) < 0.1:
            break

    print(f""" {k + 1} - длина стороны квадратной спирали, 
 которой отношение количества простых чисел к количеству всех 
 чисел на обеих диагоналях упадет ниже 10%""")

    print(f"Program running time {round(time() - start, 2)} sec.")


if __name__ == "__main__":
    main()
