'''
Задача 66
Диофантово уравнение
Рассмотрим квадратные диофантовы уравнения вида:

x2 – Dy2 = 1

К примеру, для D = 13, минимальное решение x составляет 6492 – 13×1802 = 1.

Можно убедиться в том, что не существует натуральных решений при D равном квадрату целого числа.

Найдя наименьшие значения решений x при D = {2, 3, 5, 6, 7}, мы получили следующее:

32 – 2×22 = 1
22 – 3×12 = 1
92 – 5×42 = 1
52 – 6×22 = 1
82 – 7×32 = 1

Таким образом, рассматривая минимальные решения x при D ≤ 7, было получено наибольшее значение x при D = 5.

Найдите значение D ≤ 1000 для минимальных решений x, при котором получено наибольшее значение x.


'''
from time import time

def pell_equation(n):
    a0 = int(n**0.5)
    a1 = int(2*a0/(n-a0**2)) 
    line,x,y = [a0,a1],[a0,a1*a0+1],[1,a1]
    m,d = a0,n-a0**2
    while line[-1] != 2*a0:
        m = d*line[-1]-m
        d = (n-m**2)//d
        line.append(int((a0+m)/d))
        x.append(line[-1]*x[-1]+x[-2])
        y.append(line[-1]*y[-1]+y[-2])
    if (len(line)-1) % 2 == 0:
        return (x[-2],y[-2])
    else:
        return (x[-2]**2+y[-2]**2*n,2*x[-2]*y[-2])


def main():
    start = time()
    n=1000
    dic = {}
    for i in range(8,n+1):
        if int(i**0.5)**2 == i:
            continue
        else:
            dic[i] = pell_equation(i)[0]
    print(f"{max(dic,key=dic.get)} - значение D когда D≤ 1000 для минимальных решений x, при котором получено наибольшее значение x")


    print(f"Program running time {round(time() - start, 2)} sec.")

if __name__ == "__main__":
    main()
